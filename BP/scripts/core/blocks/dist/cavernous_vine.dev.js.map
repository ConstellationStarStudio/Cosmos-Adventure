{"version":3,"sources":["cavernous_vine.js"],"names":["CavernousVine","world","e","players","getPlayers","entities","getEntities","forEach","player","applyKnockback","entity","typeId","vector","Vec3","applyImpulse","addEffect","vineGrowth","growth","block","location","x","y","z","blockBelow","dimension","getBlock","setType","beforeEvents","worldInitialize","subscribe","blockComponentRegistry","registerCustomComponent","onTick","onRandomTick"],"mappings":";;AAAA;;AACA;;;;;;;;IAEMA,a;;;AACF,yBAAYC,KAAZ,EAAmB;AAAA;;AACf,SAAKA,KAAL,GAAaA,KAAb;AAAoBC,IAAAA,CAAC;AACxB;;;;iCACY;AACT,UAAMC,OAAO,GAAG,KAAKF,KAAL,CAAWG,UAAX,EAAhB,CADS,CACgC;;AACzC,UAAMC,QAAQ,GAAG,KAAKJ,KAAL,CAAWK,WAAX,EAAjB,CAFS,CAEkC;AAE3C;;AACAH,MAAAA,OAAO,CAACI,OAAR,CAAgB,UAAAC,MAAM,EAAI;AACtBA,QAAAA,MAAM,CAACC,cAAP,CAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,GAA/B,EADsB,CACe;AACxC,OAFD,EALS,CAST;;AACAJ,MAAAA,QAAQ,CAACE,OAAT,CAAiB,UAAAG,MAAM,EAAI;AACvB,YAAIA,MAAM,CAACC,MAAP,KAAkB,kBAAtB,EAA0C,CACzC,CADD,MACO;AACH,cAAMC,MAAM,GAAG,IAAIC,YAAJ,CAAS,CAAT,EAAY,GAAZ,EAAiB,CAAjB,CAAf,CADG,CACiC;;AACpCH,UAAAA,MAAM,CAACI,YAAP,CAAoBF,MAApB,EAFG,CAE0B;AAChC;AACJ,OAND;AAOH;;;mCAEc;AACX,UAAMT,OAAO,GAAG,KAAKF,KAAL,CAAWG,UAAX,EAAhB,CADW,CAC8B;;AACzCD,MAAAA,OAAO,CAACI,OAAR,CAAgB,UAAAC,MAAM,EAAI;AACtBA,QAAAA,MAAM,CAACO,SAAP,CAAiB,kBAAjB,EAAqC,CAArC,EADsB,CACmB;AAC5C,OAFD;AAGH;;;;;;AAEDC,UAAU;;AAEd,SAASC,MAAT,CAAgBf,CAAhB,EAAmB;AAAA,MACPgB,KADO,GACGhB,CADH,CACPgB,KADO,EAGf;;AAHe,wBAIKA,KAAK,CAACC,QAJX;AAAA,MAIPC,CAJO,mBAIPA,CAJO;AAAA,MAIJC,CAJI,mBAIJA,CAJI;AAAA,MAIDC,CAJC,mBAIDA,CAJC,EAMf;;AACA,MAAMC,UAAU,GAAGL,KAAK,CAACM,SAAN,CAAgBC,QAAhB,CAAyB;AAAEL,IAAAA,CAAC,EAADA,CAAF;AAAKC,IAAAA,CAAC,EAAEA,CAAC,GAAG,CAAZ;AAAeC,IAAAA,CAAC,EAADA;AAAf,GAAzB,CAAnB,CAPe,CASf;;AACA,MAAIC,UAAU,IAAIA,UAAU,CAACZ,MAAX,KAAsB,eAAxC,EAAyD;AACrD;AACAO,IAAAA,KAAK,CAACQ,OAAN,CAAc,kBAAd;AACH;AACJ;;AAGDzB,cAAM0B,YAAN,CAAmBC,eAAnB,CAAmCC,SAAnC,CAA6C,gBAAgC;AAAA,MAA7BC,sBAA6B,QAA7BA,sBAA6B;AACzEA,EAAAA,sBAAsB,CAACC,uBAAvB,CAA+C,uBAA/C,EAAwE;AACpEC,IAAAA,MADoE,yBAClD;AAAA,UAATd,KAAS,SAATA,KAAS;AAEjB,KAHmE;AAIpEe,IAAAA,YAJoE,+BAI5C;AAAA,UAATf,KAAS,SAATA,KAAS;AAEvB;AANmE,GAAxE;AAQH,CATD","sourcesContent":["import { world, system, player,  BlockPermutation, Player, Vector, Dimension } from \"@minecraft/server\"\r\nimport { Vec3 } from \"../../api/libraries/Vector\";\r\n\r\nclass CavernousVine {\r\n    constructor(world) {\r\n        this.world = world; e\r\n    }\r\n    grabPlayer() {\r\n        const players = this.world.getPlayers(); // Get all players\r\n        const entities = this.world.getEntities(); // Get all entities\r\n\r\n        // Apply knockback to each player\r\n        players.forEach(player => {\r\n            player.applyKnockback(0, 0, 0, 0.1); // Apply knockback to the player\r\n        });\r\n\r\n        // Apply impulse to each entity\r\n        entities.forEach(entity => {\r\n            if (entity.typeId === 'minecraft:player') {\r\n            } else {\r\n                const vector = new Vec3(0, 0.1, 0); // Define a vector for impulse\r\n                entity.applyImpulse(vector); // Apply impulse to the entity\r\n            }\r\n        });\r\n    }\r\n\r\n    poisonPlayer() {\r\n        const players = this.world.getPlayers(); // Get all players\r\n        players.forEach(player => {\r\n            player.addEffect(\"minecraft:poison\", 2); // Apply poison effect for 2 seconds\r\n        });\r\n    }\r\n}\r\n    vineGrowth()\r\n\r\nfunction growth(e) {\r\n    const { block } = e;\r\n\r\n    // Get the block's current location\r\n    const { x, y, z } = block.location;\r\n\r\n    // Get the block below the current block\r\n    const blockBelow = block.dimension.getBlock({ x, y: y - 1, z });\r\n\r\n    // Check if the block below is air\r\n    if (blockBelow && blockBelow.typeId === 'minecraft:air') {\r\n        // Set the current block type to cosmos:cavernous\r\n        block.setType('cosmos:cavernous');\r\n    }\r\n}\r\n\r\n\r\nworld.beforeEvents.worldInitialize.subscribe(({ blockComponentRegistry }) => {\r\n    blockComponentRegistry.registerCustomComponent('cosmos:cavernous_vine', {\r\n        onTick({ block }) {\r\n            \r\n        },\r\n        onRandomTick({ block }) {\r\n            \r\n        }\r\n    });\r\n});"],"file":"cavernous_vine.dev.js"}
{"version":3,"sources":["cavernous_vine.js"],"names":["_server","require","_Vector","CavernousVine","world","_classCallCheck","this","e","players","getPlayers","entities","getEntities","player","applyKnockback","forEach","entity","typeId","vector","Vec3","applyImpulse","addEffect","growth","block","location","x","y","z","blockBelow","dimension","getBlock","vineGrowth","beforeEvents","worldInitialize","subscribe","_ref","blockComponentRegistry","registerCustomComponent","onTick","_ref2","onRandomTick","_ref3"],"mappings":"aAAA,IAAAA,QAAAC,QAAA,qBACAC,QAAAD,QAAA,waAEME,yBAFN,SAAAA,EAAAC,GAAAC,gBAAAC,KAAAH,GAIQG,KAAKF,MAAQA,EAAOG,4DAGpB,IAAMC,EAAUF,KAAKF,MAAMK,aACrBC,EAAWJ,KAAKF,MAAMO,cAN9BR,EAAAA,QASkB,SAAAS,GACZA,EAAOC,eAAe,EAAG,EAAG,EAAG,MAInCH,EAASI,QAAQ,SAAAC,GAZZX,GAAL,qBAAAW,EAAAC,OAAqB,CACxB,IAAAC,EAAA,IAAAC,QAAAA,KAAA,EAAA,GAAA,GAeWH,EAAOI,aAAaF,6CAZXX,KAAKF,MAAMO,aAE5BG,QAAA,SAAAF,GAkBIA,EAAOQ,UAAU,mBAAoB,cAXrC,SAAAC,OAAIN,GAAOC,IAEPM,EAAYf,EAAZe,MAFON,EAIVM,EAAAC,SAAAC,EAJUR,EAIVQ,EAAAC,EAJUT,EAIVS,EAAAC,EAJUV,EAIVU,EAoBHC,EAAaL,EAAMM,UAAUC,SAAS,CAAEL,EAAAA,EAAGC,EAAGA,EAAI,EAAGC,EAAAA,IAfvDC,GADW,kBACKA,EAAWlB,QAC3BD,EAAQM,QAAQ,oBAKpBgB,aAmBJ1B,QAAAA,MAAM2B,aAAaC,gBAAgBC,UAAU,SAAAC,GAAgCA,EAA7BC,uBACrBC,wBAAwB,wBAAyB,CACpEC,OADoE,SAAAC,GAClDA,EAAThB,OAGTiB,aAJoE,SAAAC,GAI5CA,EAATlB","file":"cavernous_vine.min.js","sourcesContent":["import { world, system, player,  BlockPermutation, Player, Vector, Dimension } from \"@minecraft/server\"\r\nimport { Vec3 } from \"../../api/libraries/Vector\";\r\n\r\nclass CavernousVine {\r\n    constructor(world) {\r\n        this.world = world; e\r\n    }\r\n    grabPlayer() {\r\n        const players = this.world.getPlayers(); // Get all players\r\n        const entities = this.world.getEntities(); // Get all entities\r\n\r\n        // Apply knockback to each player\r\n        players.forEach(player => {\r\n            player.applyKnockback(0, 0, 0, 0.1); // Apply knockback to the player\r\n        });\r\n\r\n        // Apply impulse to each entity\r\n        entities.forEach(entity => {\r\n            if (entity.typeId === 'minecraft:player') {\r\n            } else {\r\n                const vector = new Vec3(0, 0.1, 0); // Define a vector for impulse\r\n                entity.applyImpulse(vector); // Apply impulse to the entity\r\n            }\r\n        });\r\n    }\r\n\r\n    poisonPlayer() {\r\n        const players = this.world.getPlayers(); // Get all players\r\n        players.forEach(player => {\r\n            player.addEffect(\"minecraft:poison\", 2); // Apply poison effect for 2 seconds\r\n        });\r\n    }\r\n}\r\n    vineGrowth()\r\n\r\nfunction growth(e) {\r\n    const { block } = e;\r\n\r\n    // Get the block's current location\r\n    const { x, y, z } = block.location;\r\n\r\n    // Get the block below the current block\r\n    const blockBelow = block.dimension.getBlock({ x, y: y - 1, z });\r\n\r\n    // Check if the block below is air\r\n    if (blockBelow && blockBelow.typeId === 'minecraft:air') {\r\n        // Set the current block type to cosmos:cavernous\r\n        block.setType('cosmos:cavernous');\r\n    }\r\n}\r\n\r\n\r\nworld.beforeEvents.worldInitialize.subscribe(({ blockComponentRegistry }) => {\r\n    blockComponentRegistry.registerCustomComponent('cosmos:cavernous_vine', {\r\n        onTick({ block }) {\r\n            \r\n        },\r\n        onRandomTick({ block }) {\r\n            \r\n        }\r\n    });\r\n});"]}
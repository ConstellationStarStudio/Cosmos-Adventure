{
  "format_version": "1.13.0",
  "minecraft:scatter_feature": {
    "description": {
      "identifier": "cosmos:mars/base/column_mars"
    },
    "places_feature": "cosmos:mars/base/layer_picker",
    "iterations": "v.noise3 = (q.noise(v.originx * 0.001, v.originz * 0.001) - 0.1) * 4; v.noise1 = (q.noise(v.originx * 0.003125, v.originz * 0.003125) + 0.25 * q.noise(v.originx * 0.00625, v.originz * 0.00625) + 0.0625 * q.noise(v.originx * 0.0125, v.originz * 0.0125) + 0.015625 * q.noise(v.originx * 0.025, v.originz * 0.025)) * 3; v.noise2 = (q.noise(-v.originx * 0.00375, -v.originz * 0.00375) + 0.25 * q.noise(-v.originx * 0.0075, -v.originz * 0.0075) + 0.0625 * q.noise(-v.originx * 0.015, -v.originz * 0.015) + 0.015625 * q.noise(-v.originx * 0.03, -v.originz * 0.03)) * 3; v.final_height = (v.noise3 < 0) ? v.noise1 : ((v.noise3 > 1) ? v.noise2 : (v.noise1 + (v.noise2 - v.noise1) * v.noise3)); v.valley = (q.noise(v.originx * 0.005, v.originz * 0.005) - 0.5) * 1; v.adjusted = v.final_height + ((v.valley < 0) ? v.valley : 0); v.detail = q.noise(v.originx * 0.1, v.originz * 0.1) * 0.5; t.height = 90 + v.adjusted + v.detail; t.layer = (89 > math.floor(t.height)) ? math.floor(t.height) - 89 : 0; return 1;",
    "x": 0,
    "z": 0,
    "y": 0
  }
}

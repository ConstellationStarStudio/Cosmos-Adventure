{
  "format_version": "1.13.0",
  "minecraft:scatter_feature": {
    "description": {
      "identifier": "cosmos:mars/base/column_mars"
    },
    "places_feature": "cosmos:mars/base/layer_picker",
    "iterations": "v.noise3 = (q.noise(0,0)-0.1)*4; v.noise1 = (q.noise(v.originx*0.003125,v.originz*0.003125)+0.25*q.noise(v.originx*0.00625,v.originz*0.00625)+0.0625*q.noise(v.originx*0.0125,v.originz*0.0125)+0.015625*q.noise(v.originx*0.025,v.originz*0.025))*8; v.noise2 = (q.noise(-v.originx*0.00375,-v.originz*0.00375)+0.25*q.noise(-v.originx*0.0075,-v.originz*0.0075)+0.0625*q.noise(-v.originx*0.015,-v.originz*0.015)+0.015625*q.noise(-v.originx*0.03,-v.originz*0.03))*24; v.base = (v.noise3<0)? v.noise1 : ((v.noise3>1)? v.noise2 : (v.noise1+(v.noise2-v.noise1)*v.noise3)); v.mountain = q.noise(v.originx*0.002,v.originz*0.002)*95; v.valley = (q.noise(v.originx*0.005,v.originz*0.005)-0.5)*50; v.choice = q.noise(v.originx*0.004,v.originz*0.004); v.hill = (v.choice<0.5)? v.mountain : v.valley; v.combined = v.base+v.hill; v.detail = q.noise(v.originx*0.1,v.originz*0.1)*2; t.height = 90+v.combined+v.detail; t.layer = (89>math.floor(t.height))? math.floor(t.height)-89 : 0; return 1;",
    "x": 0,
    "z": 0,
    "y": 0
  }
}
